/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package Web.App;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

import java.util.ArrayList;

class AppTest {
    @Test void FourElementMatrix() {
        App testClass = new App();
        ArrayList<Integer> first = new ArrayList<>();
        ArrayList<Integer> second = new ArrayList<>();

        first.add(5);first.add(6);
        second.add(1);second.add(3);

        ArrayList<ArrayList<Integer>> matrix = new ArrayList<>();
        matrix.add(first);
        matrix.add(second);

        assertFalse(testClass.isTranspose(matrix, 5,6,1,3));
        assertTrue(testClass.isTranspose(matrix, 5,1,6,3));
    }

    @Test void NineElementMatrix() {
        App testClass = new App();

        ArrayList<Integer> first = new ArrayList<>();
        ArrayList<Integer> second = new ArrayList<>();
        ArrayList<Integer> third = new ArrayList<>();

        first.add(56);first.add(72);first.add(33);
        second.add(78);second.add(42);second.add(98);
        third.add(31);third.add(71);third.add(61);

        ArrayList<ArrayList<Integer>> matrix = new ArrayList<>();
        matrix.add(first);
        matrix.add(second);
        matrix.add(third);

        assertFalse(testClass.isTranspose(matrix, 12,32,54,88,32,11,99,44,37));
        assertTrue(testClass.isTranspose(matrix, 56,78,31,72,42,71,33,98,61));
    }

    @Test void sixTeenElementMatrix() {
        App testClass = new App();

        ArrayList<Integer> first = new ArrayList<>();
        ArrayList<Integer> second = new ArrayList<>();
        ArrayList<Integer> third = new ArrayList<>();
        ArrayList<Integer> fourth = new ArrayList<>();

        first.add(80);first.add(32);first.add(70);first.add(55);
        second.add(81);second.add(24);second.add(19);second.add(88);
        third.add(37);third.add(54);third.add(27);third.add(10);
        fourth.add(22);fourth.add(40);fourth.add(11);fourth.add(18);

        ArrayList<ArrayList<Integer>> matrix = new ArrayList<>();
        matrix.add(first);
        matrix.add(second);
        matrix.add(third);
        matrix.add(fourth);

        assertFalse(testClass.isTranspose(matrix, 15,654,54,23,843,465,3,21,0,564,321,15,21,3,21,55));
        assertTrue(testClass.isTranspose(matrix, 80,81,37,22,32,24,54,40,70,19,27,11,55,88,10,18));
    }

    @Test void nullElementMatrix() {
        App testClass = new App();

        ArrayList<ArrayList<Integer>> matrix = new ArrayList<>();
        
        assertFalse(testClass.isTranspose(matrix, 1,0,564,321,15,21,3,21,55));
        
    }

    @Test void sizeAreNotEqual() {
        App testClass = new App();

        ArrayList<Integer> first = new ArrayList<>();
        ArrayList<Integer> second = new ArrayList<>();
        ArrayList<Integer> third = new ArrayList<>();
        ArrayList<Integer> fourth = new ArrayList<>();

        first.add(80);first.add(32);first.add(70);first.add(55);
        second.add(81);second.add(24);second.add(19);second.add(88);
        third.add(37);third.add(54);third.add(27);third.add(10);
        fourth.add(22);fourth.add(40);fourth.add(11);fourth.add(18);

        ArrayList<ArrayList<Integer>> matrix = new ArrayList<>();
        matrix.add(first);
        matrix.add(second);

        assertFalse(testClass.isTranspose(matrix, 80,81,37,22,32,24,54,40,70,19,27,11,55,88,10,18));
    }
}
